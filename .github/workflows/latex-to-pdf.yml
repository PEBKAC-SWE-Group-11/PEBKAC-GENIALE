name: Build and Transport PDFs

on:
  pull_request:
    types:
      - closed
    branches:
      - develop

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Install TeX Live and required packages
      - name: Install TeX Live and Inkscape
        run: |
          sudo apt-get update
          sudo apt-get install -y texlive texlive-latex-extra texlive-fonts-recommended texlive-lang-italian inkscape
          echo "Installation complete!"

      # Debug environment (ensure no `tlmgr` is invoked)
      - name: Debug environment
        run: |
          which tlmgr || echo "tlmgr not found"
          tlmgr --version || echo "tlmgr cannot run"

      # Process LaTeX projects and generate PDFs
      - name: Process all LaTeX projects
        run: |
          base_dir="src/2 - RTB"
          output_dir="PDF/2 - RTB"
          mkdir -p "$output_dir"

          # Function to process a LaTeX project
          process_latex_project() {
            project_dir="$1"
            relative_path=$(realpath --relative-to="$base_dir" "$project_dir")
            output_path="$output_dir/$relative_path"
            mkdir -p "$output_path"
            cd "$project_dir"

            # Convert SVGs to PDFs
            if [ -d "images" ]; then
              for svg_file in images/*.svg; do
                [ -e "$svg_file" ] || continue
                pdf_file="${svg_file%.svg}.pdf"
                inkscape "$svg_file" --export-filename="$pdf_file"
              done
            fi

            # Find and compile the main LaTeX file
            main_tex=$(find . -maxdepth 1 -type f -name "*.tex" | head -n 1)
            if [ -n "$main_tex" ]; then
              pdflatex -shell-escape -interaction=nonstopmode -file-line-error "$main_tex"
              pdflatex -shell-escape -interaction=nonstopmode -file-line-error "$main_tex"

              # Move the generated PDF to the output directory, removing intermediate folders
              pdf_name=$(basename "$main_tex" .tex).pdf
              final_output_path="$output_dir/$(dirname "$relative_path")"
              mkdir -p "$final_output_path"
              mv "$pdf_name" "$GITHUB_WORKSPACE/$final_output_path/$(basename "$project_dir").pdf"
            fi

            cd "$GITHUB_WORKSPACE"
          }

          # Process Verbali (Interni, Esterni)
          for type in "Interni" "Esterni"; do
            for sub_dir in "$base_dir/Verbali/$type"/*; do
              [ -d "$sub_dir" ] && process_latex_project "$sub_dir"
            done
          done

      # Upload PDFs as artifact
      - name: Upload PDFs as artifact
        uses: actions/upload-artifact@v3
        with:
          name: pdf-artifact
          path: PDF/

  transport_to_main:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Checkout branch main
      - name: Checkout branch main
        uses: actions/checkout@v3
        with:
          ref: main

      # Download PDFs artifact
      - name: Download PDFs artifact
        uses: actions/download-artifact@v3
        with:
          name: pdf-artifact

      # Move content to root
      - name: Move PDFs to root
        run: |
          if [ -d "PDF" ]; then
            mv PDF/* ./ 
            rm -rf PDF
          else
            echo "No PDF directory found."
          fi

      # Commit and push changes to main
      - name: Commit and push to main
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Transport PDFs from develop to main root"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
